var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Overview","text":"<p>This is a set of notes on how I'm building my custom ERCF (Enraged Rabbit Carrot Feeder). In many ways this custom build is likely to be similar to what the (as yet to be released) ERCF v2 will be.</p> <p>Figuring out how to make this custom build can be a bit daunting since there are so many different pieces to it. Thankfully I did not have to figure this all out on my own. I was able to search the internet and come across various resources and posts from some awesome people. I think what I've come up with (so far) is pretty good, so I thought I'd take notes and also share them with others (as well as future me who forgets things).</p> <p>Please check out the sidebar on the left (pull it down if you have to in case it is collapsed) and browse the various sections I've compiled thus far.</p> <p>Oh...and thanks for visiting.</p> <p>--Sakitume (Sock it to me)</p> <p>My ERCF Build Log. To check out my build log you may need this invite to the Delayed Development discord server</p> <p>My YouTube channel</p>"},{"location":"assembly/filament-blocks.html","title":"Filament blocks","text":"<p>TODO</p>"},{"location":"assembly/gearbox.html","title":"Gearbox","text":""},{"location":"assembly/gearbox.html#the-gearbox-assembly","title":"The gearbox assembly","text":"<p>Reference the original ERCF Build Manual to figure out what heat set inserts you'll install. There are only a few differences between SturdyBunny and original ERCF v1.1</p> <p>VERY IMPORTANT: Be sure to route the endstop switch wires and your gear motor wires into the correct area during this part of the assembly or you will not be able to install the bottom plate later on. I didn't realize this the first time I assembled the gearbox so I want you to avoid the headache of having to disassemble and fix later on. I need to put some pictures up about this here!!!</p> <p>If you're reading this and you're building it right now and this isn't clear then feel free to message me on the Delayed Discord server (use search box of this site for a link in case you're not already a member of that server).</p>"},{"location":"assembly/prep.html","title":"Prep","text":"<p>You will want to reference the original ERCF v1.1 Build Manual</p> <p>I have lots of pictures and raw video footage of when I assembled my ERCF. I hope to make some time to edit something  together and post up to YouTube. </p> <p>I'll throw up some basic stuff for now</p>"},{"location":"assembly/prep.html#2020-extrusion","title":"2020 extrusion","text":"<p>SturdyBunny requires a length of 2020 extrusion. The exact length depends on the number of gates you want as well as the type of filament blocks you'll be using (Triple-Decky or Thumper Blocks).</p>"},{"location":"assembly/prep.html#if-using-thumper-blocks","title":"If using Thumper Blocks","text":"<p>I have a 6 gate ERCF kit. I cut my extrusion to 175mm. This allows me to fully swing open the upper part of the assembly to about 105 degrees. So....a forumula could be derived like this:</p> <pre><code>(NumberOfGates * 21) + 49\n</code></pre> <p>A 9 gate build would probably be around 238mm; I'd round that up to an even 240mm. This is just an estimation</p>"},{"location":"assembly/prep.html#if-using-triple-decky","title":"If using Triple-Decky","text":"<p>If using Triple-Decky then reference this post from the designer of Triple-Decky.</p> <p>It basically says this about the extrusion:</p> <pre><code>Length of 2020 extrusion = 54.6 + (N x 23.05) Note that the extrusion can go past the block end without problem.\n</code></pre> <p>I've also heard several times on the Voron discord server that 7 1/4\" (184mm) is a good length for a 6 gate build See this post on the Voron discord server</p>"},{"location":"assembly/prep.html#heatset-inserts","title":"Heatset inserts","text":"<p>Reference the manual, you'll need to be able to install heatset inserts into a variety of different parts. The manual provides a link to a tutorial in case you aren't already familiar with this process</p>"},{"location":"assembly/selector.html","title":"Selector","text":""},{"location":"assembly/selector.html#springy","title":"Springy","text":"<p>TODO</p>"},{"location":"assembly/selector.html#servo-arm","title":"Servo arm","text":"<p>You will need to wait until you have Happy Hare installed before you can install the servo arm. This is because you want to set the servo into position (either up or down) so you can align the arm to match that position.</p>"},{"location":"sidebar/assembly.html","title":"Assembly","text":"<p>TODO</p> <p>You will want to reference the original ERCF v1.1 Build Manual</p> <p>I have lots of pictures and raw video footage of when I assembled my ERCF. I hope to make some time to edit something  together and post up to YouTube. Here are some scattered notes for now.</p>"},{"location":"sidebar/assembly.html#2020-extrusion","title":"2020 extrusion","text":"<p>SturdyBunny requires a length of 2020 extrusion. The exact length depends on the number of gates you want as well as the type of filament blocks you'll be using (Triple-Decky or Thumper Blocks).</p>"},{"location":"sidebar/assembly.html#if-using-thumper-blocks","title":"If using Thumper Blocks","text":"<p>I have a 6 gate ERCF kit. I cut my extrusion to 175mm. This allows me to fully swing open the upper part of the assembly to about 105 degrees. So....a forumula could be derived like this:</p> <pre><code>(NumberOfGates * 21) + 49\n</code></pre> <p>A 9 gate build would probably be around 238mm; I'd round that up to an even 240mm. This is just an estimation</p>"},{"location":"sidebar/assembly.html#if-using-triple-decky","title":"If using Triple-Decky","text":"<p>If using Triple-Decky then reference this post from the designer of Triple-Decky.</p> <p>It basically says this about the extrusion:</p> <pre><code>Length of 2020 extrusion = 54.6 + (N x 23.05) Note that the extrusion can go past the block end without problem.\n</code></pre> <p>I've also heard several times on the Voron discord server that 7 1/4\" (184mm) is a good length for a 6 gate build See this post on the Voron discord server</p>"},{"location":"sidebar/assembly.html#the-gearbox-assembly","title":"The gearbox assembly","text":"<p>Reference the original ERCF Build Manual to figure out what heat set inserts you'll install. There are only a few differences between SturdyBunny and original ERCF v1.1</p> <p>VERY IMPORTANT: Be sure to route the endstop switch wires and your gear motor wires into the correct area during this part of the assembly or you will not be able to install the bottom plate later on. I didn't realize this the first time I assembled the gearbox so I want you to avoid the headache of having to disassemble and fix later on. I need to put some pictures up about this here!!!</p> <p>If you're reading this and you're building it right now and this isn't clear then feel free to message me on the Delayed Discord server (use search box of this site for a link in case you're not already a member of that server).</p>"},{"location":"sidebar/assembly.html#servo-arm","title":"Servo arm","text":"<p>You will need to wait until you have Happy Hare installed before you can install the servo arm. This is because you want to set the servo into position (either up or down) so you can align the arm to match that position.</p>"},{"location":"sidebar/custom-build-description.html","title":"What is this custom build?","text":"<p>I based this build on (what I call) a \"recipe\" provided by Tea (a member of the Voron discord server) who made a post in the <code>#ercf_questions</code> channel around May 2023 on what she would use if she were to make an ERCF in May 2023</p> <p>Note: If you need an invite to reach that Voron discord server post you can try this</p>"},{"location":"sidebar/custom-build-description.html#the-basic-recipe","title":"The basic recipe","text":"<p>The original recipe as described by Tea uses the following ingredients:</p> <ul> <li>SturdyBunny - A fork of the original ERCF project. So instead of the original ERCF project, we start with this.<ul> <li>SturdyBunny uses a small length of 2020 extrusion in place of the two 8mm threaded rod of the original ERCF design making this more...uh....sturdy</li> </ul> </li> <li>Springy - A modified selector (the carriage that slides back and forth selecting one port/gate over another)</li> <li>Triple-Decky - These are improved filament blocks that are very popular and well established</li> <li>Binky - This is an improved encoder, the subsystem that helps figure out how much filament is being pushed/pulled</li> </ul> <p>That's the \"recipe\" that Tea describes and what many people consider to be the \"Community ERCF v2\". It's a fine recipe, however I'm changing things up a little bit with my custom build.</p> <p>Rather than using Triple-Decky I've opted to use Thumper Blocks. And to avoid tip tuning (which I hear is a time consuming and tricky process), I've opted to use a filament cutter. And I'm going to try out the ERCF Filament Cutter</p> <p>More info on these different mods can be found here</p>"},{"location":"sidebar/custom-build-description.html#thats-a-lot-of-ingredients","title":"That's a lot of ingredients","text":"<p>Yeah...to build this custom beast you are going to have to jump around a bunch of different mods/designs. Each one will have a set of <code>.stl</code> files that you need to print. And it isn't very clear which files you actually need and which ones you should skip altogether. Then you have to assemble everything and there isn't going to be an instruction manual for this. </p> <p>But don't worry, while it may seem daunting there are others who have traveled this path (or one similar to it) and that makes it easier. There are several resources available that you can turn to:</p> <ul> <li>The <code>#ercf_questions</code> channel on the Voron Discord Server has a lot of activity with people posting questions (and often answers) regarding ERCF. To be honest, because it can be a bit busy at times, and due to how Discord works, some posts can get lost (scroll away) due to the activity.</li> <li>Matt's Unofficial ERCF v2 Printed Parts Tracker spreadsheet</li> <li>The <code>#ercf_mmu</code> channel on fizzy's 3DPrinting Discord server has some helpful folks. Not as busy as the Voron Discord server, but maybe that's a good thing.</li> <li>My ERCF Build Log on the Delayed Development discord server (invite for this server is here)</li> </ul> <p>And well....of course there are these notes you're reading now, as well as a few videos on my YouTube channel.</p>"},{"location":"sidebar/filament-cutters.html","title":"Filament Cutter options","text":"<p>You can do the original tip tuning step, or you could possibly skip that whole (time consuming and tricky) process and instead cut off the pesky tip rather than try to tune it.</p>"},{"location":"sidebar/filament-cutters.html#toolhead-cutter-options","title":"Toolhead cutter options","text":"<p>I am using a Sherpa mini extruder for my BBox printers and think these designs on Printables might be something I could adapt. They basically go between the Sherpa and whatever it was mounting to. </p> <p></p> <p>These designs I found look promising. It's always appreciated when people take the time to share with the community!</p> <p>This first one was shared on the Voron Discord server: https://www.printables.com/model/599936-filament-cutter-sherpa-mini-ercf-v2</p> <p>This second one is a remix of the first and seems simpler and uses an Xacto blade rather than a box cutter blade. Looks to be a smaller design: https://www.printables.com/model/622289-filament-cutter-for-sherpa-and-sherpa-patterned-ex</p>"},{"location":"sidebar/filament-cutters.html#another-option","title":"Another option","text":"<p>The most intriguing option at this time (for me) is the Filament Cutter for ERCF from KevinAkaSam. What distinguishes this design from the others is that the cutter is placed against the ERCF rather than being part of the toolhead. This would allow it to be used with most any existing printer/toolhead you already have.</p> <p>This is undergoing lots of development these past few weeks. It's best to join his discord server and visit the ERCF Filament Cutter post to catch up on latest happenings.</p> <p>Update: I've decided to go with this cutter and have already built and insalled this onto my ERCF. I'll update this site soon</p>"},{"location":"sidebar/fysetc-erb.html","title":"Preparing the FYSETC ERB board","text":"<p>There is a Github repo for this board. It provides instructions on how to build and flash Klipper firmware onto the FYSETC ERB board.  You can find that repo here</p> <p>I chose the option that lets you build and flash directly from your Klipper host (usually a Raspberry Pi....but not for me as I use other devices for my printers).</p> <p>Run the following commands (line by line) on your Klipper host (usually a Raspberry Pi).</p> <pre><code>cd  ~/klipper\nmake clean\nmake menuconfig\n</code></pre> <p>Select the options as shown in this screenshot</p> <p></p> <p>Exit the menu config using the <code>ESC</code> key. Then use the following command to actually build the firmware.</p> <pre><code>make\n</code></pre> <p>After the firmware is built you will want to power up the FYSETC ERB and get into boot mode so you can flash this firmware onto it. Follow these steps to get into boot mode.</p> <ol> <li>Connect 24V to the ERB</li> <li>Connect USB-C cable to ERB and your Klipper device (usually Raspberry Pi)</li> <li>Push and hold the <code>BOOTSEL</code> button (keep this held down until step 6)</li> <li>Push and hold <code>RST</code> button for 0.5 seconds, then release</li> <li>Continue holding the <code>BOOTSEL</code> button for another 3 seconds, then release</li> <li>The ERB will have reset into boot mode and you can verify this using <code>lsusb</code></li> </ol> <p></p>"},{"location":"sidebar/happy-hare.html","title":"Setting up Happy Hare","text":"<p>Happy Hare is the software package that you will use with your new SturdyBunny/ERCF. It replaces the software described in the original ERCF v1.1 manual. </p> <p>Note: Happy Hare isn't just for ERCF, it can work with other MMU systems. But for our purposes we are using it to interface with the SturdyBunny/ERCF we just built</p> <p>TODO</p>"},{"location":"sidebar/happy-hare.html#just-some-misc-notes-while-im-working-on-this","title":"Just some misc notes while I'm working on this","text":""},{"location":"sidebar/happy-hare.html#basic-install-of-happy-hare","title":"Basic install of Happy Hare","text":"<p>Clone Happy Hare v2.2 from the Github repo</p> <pre><code>cd ~\ngit clone https://github.com/moggieuk/Happy-Hare.git\ncd Happy-Hare\n</code></pre> <p>The docs say there's a way to perform a kind of dry-run of the install without actually modifying your current installation. It will end up creating the files that a normal install would but it will place them into your <code>/tmp</code> folder so you can inspect them before doing a real install.</p> <pre><code>./install.sh -i -c /tmp -k /tmp\n</code></pre> <p>This let me inspect what it would do (look in the <code>mmu</code> subfolder it creates and view the files)</p> <p>Then I decided to actually install it:</p> <pre><code>cd ~/Happy-Hare\n./install.sh -i\n</code></pre> <p>Using the <code>-i</code> parameter so that the install script will interactively prompt you for various options. The first question you are asked is what type of MMU are you running. For this build I tried several of the options before determining the best one. The options I chose were \"ERCF v1.1. (all variations)\", \"ERCF v2.0\" and \"Other (Custom creation, ...)\".</p> <p>I intitially thought that \"ERCF v2.0\" might be the best option, since I'm using SturdyBunny, Thumper Blocks, Springy and Binky. But the problem is that if you choose \"ERCF v2.0\" some configuration values will be generated based on Happy Hare thinking you're using the 23.05mm wide Triple Decky filament blocks when we're actually using the 21.0mm Thumper Blocks. This ends up breaking the <code>MMU_CALIBRATE_SELECTOR</code> auto-calibration later on.</p> <p>I tried custom but that wasn't sufficient as well. It turns out that \"ERCF v1.1. (all variations)\" is actually what you want as it will let you specify each mod you're using. When it ask you if you are using \"Triple-Decky\" just say no and it will end up using the correct 21.0mm width that Thumper Blocks and original SturdyBunny/ERCF uses.</p> <p>Here's what the install script looks like when I ran it and chose the correct options for my particular build.</p> <pre><code>donovan@kp:~/Happy-Hare$ ./install.sh -i\n\nKlipper config directory (/home/donovan/printer_data/config) found\nKlipper service found\nReading default configuration parameters...\n\nLet me see if I can help you with initial config (you will still have some manual config to perform)\n\nWhat type of MMU are you running?\n1) ERCF v1.1 (all variations)\n2) ERCF v2.0\n3) Tradrack v1.0\n4) Other (Custom creation, ...)\nMMU Type? (1-4)? 1\nSome popular upgrade options for ERCF v1.1 are supported. Let me ask you about them...\nAre you using the 'Springy' sprung servo selector cart (y/n)? y\nAre you using the improved 'Binky' encoder (y/n)? y\nAre you using the wider 'Triple-Decky' filament blocks (y/n)? n\n\n----------\nLet me see if I can help you with initial config (you will still have some manual config to perform)...\nAre you using the EASY-BRD or Fysetc Burrows ERB controller? (y/n)? y\nGreat, I can setup almost everything for you. Let's get started\n\n----------\nYou seem to have a RP2040-based controller serial port.\nAre you using the Fysetc Burrows ERB controller? (y/n)? y\n----------\nThis looks like your ERB controller serial port. Is that correct?\n/dev/serial/by-id/usb-Klipper_rp2040_E66888351B82A336-if00 (y/n)? y\n\nBoard Type: ERB\n\n----------\nTouch selector operation using TMC Stallguard? This allows for additional selector recovery steps but is difficult to tune\nEnable selector touch operation (not recommend if you are new to MMU / Happy Hare (y/n)? n\n\n----------\nHow many gates (selectors) do you have (eg 3, 6, 9, 12)?\nNumber of gates? 6\n\n----------\nDo you have a toolhead sensor you would like to use?\n(if reliable this provides the smoothest and most reliable loading and unloading operation)\nEnable toolhead sensor (y/n)? n\n\n----------\nWhich servo are you using?\n1) MG-90S\n2) Savox SH0255MG\nServo? (1-2)? 1\n\n----------\nClog detection? This uses the MMU encoder movement to detect clogs and can call your filament runout logic\nEnable clog detection (y/n)? y\n    Would you like MMU to automatically adjust clog detection length (recommended)?\n    Automatic (y/n)? y\n\n----------\nEndlessSpool? This uses filament runout detection to automate switching to new spool without interruption\nEnable EndlessSpool (y/n)? n\n\n----------\nFinally, would you like me to include all the MMU config files into your printer.cfg file\nAdd include? (y/n)? y\n    Would you like to include Mini 12864 menu configuration extension for MMU\n    Include menu (y/n)? n\n    Would you like to include legacy ERCF_ command set compatibility module\n    Include legacy ERCF command set (y/n)? y\n    Would you like to include the default pause/resume macros supplied with Happy Hare\n    Include client_macros.cfg (y/n)? n\n\nmmu_vendor: ERCF\nmmu_version: 1.1sb\nmmu_num_gates: 6\nservo_up_angle: 30\nservo_move_angle: 30\nservo_down_angle: 140\nenable_clog_detection: 2\nenable_endless_spool: 0\ngate_parking_distance: 23\n\n\n    vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\n\n    NOTES:\n     What still needs to be done:\n     * Tweak motor speeds and current, especially if using non BOM motors\n     * Adjust motor direction with '!' on pin if necessary. No way to know here\n     * Move you extruder stepper configuration into mmu/base/mmu_hardware.cfg\n     * Adjust your config for loading and unloading preferences\n\n    Advanced:\n         * Tweak configurations like speed and distance in mmu/base/mmu_parameter.cfg\n\n    Good luck! MMU is complex to setup. Remember Discord is your friend..\n\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nCopying original printer.cfg file to /home/donovan/printer_data/config/printer-20231114_205612.cfg-old\nCopying configuration files into /home/donovan/printer_data/config/mmu directory...\nConfig directory /home/donovan/printer_data/config/mmu already exists - backing up old config files to /home/donovan/printer_data/config/mmu-20231114_205612\nInstalling configuration file mmu.cfg\nInstalling configuration file mmu_hardware.cfg\nInstalling configuration file mmu_parameters.cfg\nInstalling configuration file mmu_software.cfg\nSkipping copy of mmu_vars.cfg file because already exists\nLinking mmu extensions to Klipper...\nLinking mmu extension to Moonraker...\nAdding update manager to moonraker.conf\n[update_manager happy-hare] already exists in moonraker.conf - skipping install\n[mmu_server] already exists in moonraker.conf - skipping install\nKlipper not restarted automatically because you need to validate and complete config\n\nDone.  Enjoy ERCF (and thank you Ette for a wonderful design)...\n\n(\\_/)\n( *,*)\n(\")_(\") Happy Hare Ready\n\ndonovan@kp:~/Happy-Hare$\n</code></pre> <p>After this install I restarted the Klipper firmware (using Mainsail) and then i performed the basic hardware config/tests found in the hardware configuration doc. </p> <p>Then I started to perform the calibration steps described in the MMU Calibration Doc</p>"},{"location":"sidebar/misc.html","title":"Misc","text":"<p>Here is a forum thread where someone is documenting their ERCF build with photos.</p> <p>If you're using the original Encoder (say from a kit or self-sourced), it can be tricky to get good performance and a post on Voron discord server provided a link to some documentation on how to get best performance (like blackening the valleys of the BMG gear): https://discord.com/channels/460117602945990666/909743915475816458/1175864180243447828</p>"},{"location":"sidebar/misc.html#ignore-the-following","title":"Ignore the following","text":"<p>These are just snippets I'm holding on to while I maintain this gist. Ignore these</p> <pre><code>I'm using OrcaSlicer and this is the orientation I'm using for the parts in the \"Linear axis\" folder:\n![image](https://user-images.githubusercontent.com/875866/280449274-a896f951-742d-4b80-a73d-18be4c52e4d4.png)\n![image](https://user-images.githubusercontent.com/875866/280449404-7c41bc82-79b4-4ceb-ac02-28e1d5e0b520.png)\n</code></pre>"},{"location":"sidebar/printing.html","title":"Printing parts","text":"<p>The ERCF build manual provides a description on slicer settings. Basically the same as printing Voron parts</p> <ul> <li>0.2mm layer</li> <li>Forced 0.4mm extrusion width</li> <li>4 walls, 5 layers for top, 5 layers for bottom</li> <li>40% infill</li> <li>No need to add supports with your slicer</li> </ul>"},{"location":"sidebar/printing.html#two-tone-color-scheme","title":"Two-tone color scheme","text":"<p>The STL files can be printed with a primary and a secondary (accent) color. It looks pretty nice this way. I'm using red PolyMaker PolyLite ABS and Sunlu Blue ABS.</p> <p>The filename of an STL will have an <code>[a]</code> prefix to indicate if you should use the accent color for it.</p>"},{"location":"sidebar/printing.html#what-stl-files-do-we-need-to-print","title":"What STL files do we need to print?","text":"<p>The STL files for the printed parts will come from the projects/mods I mentioned earlier. You won't be using any STL files from the original ECRF project.</p> <ol> <li> <p>Start by downloading the original ERCF v1.1 manual. You will use this even though a lot of the parts are different; the new parts are still close enough to their original counterparts that you will find this manual to be helpful. </p> </li> <li> <p>Then you should clone the SturdyBunny project. Or download the zip and unzipping it somewhere to work with.</p> </li> <li> <p>Then do the same for Springy project.</p> </li> <li> <p>Do the same for Triple-Decky or Thumper Blocks depending on which one you decided to use.</p> </li> </ol> <p>Update: I have come across a great resource for keeping track of what STL files you will need to print. It is Matt's Unofficial ERCF v2 Printed Parts Tracker spreadsheet. Save a copy of this Google document and check/uncheck some of the boxes to match what you're building and it will tell you the number of parts to print for a specific STL file. However I will still itemize each and every part that I used for my build on this site page as it lets me keep the notes that I made along side the list.</p>"},{"location":"sidebar/printing.html#what-ive-printed-or-are-currently-printing","title":"What I've printed (or are currently printing)","text":"<p>I'm going to keep a list of everything that I think needs to be printed, and from where it is found. I'll update this as I print more and more parts. I'll also update it when I discover something wasn't needed or if something was missed.</p>"},{"location":"sidebar/printing.html#sturdy-bunny-parts","title":"Sturdy Bunny parts","text":"<p>Because SturdyBunny is a fork, it also has the original parts in the repo. You want to ignore those. Intead you want to look at the \"Study_FeederV2 (development parts)\" folder that has subfolders for the STL files you will print as well as CAD (step) file that you can view to see how the assembly goes together.</p> <p></p> <p>In the following sections I will list the name of a folder in SturdyBunny and the STL files within that foler that you should print</p>"},{"location":"sidebar/printing.html#linear-axis","title":"Linear Axis","text":"<p>Print all of the files in the <code>Linear axis</code> folder except the <code>Idler_Block_V1A.stl</code> file as the Spring mod has a replacement for that part</p> <pre><code>/SturdyBunnyProject/Study_FeederV2 (development parts)/Stls/Linear axis\n  [a]_Drag_Chain_Anchor_Bottom.stl\n  [a]_Motor_Lock.stl\n  Selector_Motor_Support.stl\n</code></pre>"},{"location":"sidebar/printing.html#gear-box","title":"Gear Box","text":"<p>Print all of the files in the <code>Gear box</code> folder</p> <pre><code>/SturdyBunnyProject/Study_FeederV2 (development parts)/Stls/Gear box\n  [a]_Bearing_Spacer_x2.stl\n  [a]_Knob.stl\n  [a]_Logo_Plate.stl\n  [a]_M4_80T_Wheel.stl\n  [a]_Side_Latch_x2.stl\n  [a]_Top_Panel.stl\n  [a]Bottom_panel_V1B.stl\n  Gear_Box_Back_V2B.stl\n  Gear_Box_Front_V3C.stl\n\n</code></pre> <p>Note: OrcaSlicer warned about the <code>[a]_Side_Latch_x2.stl</code> part. It's okay, you can ignore that warning and print it without having to re-orient the part or enable supports. The part is a print-in-place type that has portion that swivels out.</p> <p></p> <p>I am using the FYSETC ERB board that came with my kit. This board is like the EASY BRD in that you will skip the part in the ERCF manual about using connectors that mount onto the motor arm. This means you'll want to print a motor arm part from the <code>EASY BRD Option</code> folder.</p> <p>Depending on the size of the Nema stepper you're using for the gearbox you will print one of the following parts. </p> <pre><code>/SturdyBunnyProject/Study_FeederV2 (development parts)/Stls/Gear box/EASY BRD Option\n  Motor_Arm_NEMA14_EASYBRD.stl\n  Motor_Arm_NEMA17_EASYBRD.stl\n</code></pre> <p>My FYSETC kit comes with a Nema14 which I'm not going to use. Instead I'll use a Nema17 from my parts bin so I chose to print <code>Motor_Arm_NEMA17_EASYBRD.stl</code></p>"},{"location":"sidebar/printing.html#tools","title":"Tools","text":"<p>There is a printed piece that is used as a gauge/jig to help you place the pulley on your Nema 17 motor at the correct offset from the face of the motor. There's another printed piece to help you insert an MR85ZZ bearing into a filament block. You can find them here:</p> <pre><code>SturdyBunnyProject/Study_FeederV2 (development parts)/Stls/Tools\n  Pulley_Tool_NEMA17.stl\n  TOOL_FilamentBlock_BearingInstall_V2.stl\n</code></pre>"},{"location":"sidebar/printing.html#selector","title":"Selector","text":"<p>You will ignore many of the parts in this <code>Selector</code> folder as (I think) Springy will provide different parts. However there are two parts that you will want to print from SturdyBunny:</p> <pre><code>/SturdyBunnyProject/Study_FeederV2 (development parts)/Stls/Selector\n  Belt_Tensionner.stl\n  Drag_Chain_Anchor.stl\n</code></pre>"},{"location":"sidebar/printing.html#filament-blocks","title":"Filament Blocks","text":"<p>You will ignore many of the parts in this <code>Filament blocks</code> folder as (I think) Triple-Decky will provide different parts. However there are a few parts that you will want to print from SturdyBunny:</p> <pre><code>/SturdyBunnyProject/Study_FeederV2 (development parts)/Stls/Filament blocks\n  Filament_Blocks_End_Foot_V1B.stl\n  Filament_Blocks_End_Nobearing_V2A.stl\n</code></pre> <p>Note: When you print <code>Filament_Blocks_End_Foot_V1B.stl</code> you should consider printing it in the accent color (if you're doing that) so that it matches the <code>[a]Bottom_panel_V1B.stl</code> part. You should also use your slicer's \"Auto\" orientation option, otherwise the default orientation has some bridging that may not turn out as clean as you'd like. Using the \"Auto\" orientation worked better for me.</p> <p></p>"},{"location":"sidebar/printing.html#supports","title":"Supports","text":"<p>I initially printed out some parts from this folder thinking they may be useful. It turns out I didn't need them or used something else. So in my opinion, you can ignore this folder.</p>"},{"location":"sidebar/printing.html#easy_brd","title":"EASY_BRD","text":"<p>My kit provided a FYSETC ERB controller board, the following part will let you mount it to the 2020 extrusion of the SturdyBunny. I wasn't able to use the <code>ESYBRD_COVER_V1A.stl</code> cover with my ERB since it isn't exactly the same form factor as the Easy BRD.</p> <pre><code>/SturdyBunnyProject/Study_FeederV2 (development parts)/Stls/EASY_BRD\n  [a]ERCF_EASY_BRD_BRACKET_V1A.stl\n</code></pre>"},{"location":"sidebar/printing.html#triple-decky-parts-skip-this-if-using-thumper-blocks","title":"Triple-Decky parts (skip this if using Thumper Blocks)","text":"<p>For each of the following parts print out one for each gate. In my case my ERCF will have 6 gates (ports)</p> <pre><code>Triple-Decky/STL/Sturdy Bunny/Rev_C\n  [a]Triple_Decky_Latch_RevC6_0.stl\n\nTriple-Decky/STL/Sturdy Bunny/Rev_C/Rev_C7.0_3PS_only\n  [a]Triple_Decky_Tophat-integerated_3PS_C7_0.stl\n  Triple_Decky_Base_C7_0.stl\n  Triple_Decky_Filament_path_3PS_C7_0.stl\n</code></pre> <p>You can still use the revision C6.3 parts but I thought it might be better to use the latest filament block parts (C7.0 3PS). One important thing to keep in mind is the fitment of the \"base\" and \"filament-path\" parts. The upper \"filament-path\" part hinges/pivots against the \"base\" part. If this is not freely pivoting then there are additional versions of these parts that have increased clearance. They can be found in the <code>Clearance_options</code> subfolder:</p> <pre><code>Triple-Decky/STL/Sturdy Bunny/Rev_C/Rev_C7.0_3PS_only/Clearance_options\n  Triple_Decky_Base_C70_clrearance1.stl\n  Triple_Decky_Base_C70_clrearance2.stl\n  Triple_Decky_Filament_path_3PS_C70_clearance1.stl\n  Triple_Decky_Filament_path_3PS_C70_clearance2.stl\n</code></pre> <p>Be sure to check out the video at the bottom of the Triple-Decky README.md</p> <p>I've also put together a video that describes how I clean up these Triple-Decky parts and assemble them. This will also show you the type of smooth and feely pivoting action you should be going for</p> <p></p> <p>Next you need to print out one trap for each port (filament block). They are found in the <code>Traps</code> folder. I chose to use the \"V Shape\" variant:</p> <pre><code>Triple-Decky/STL/Sturdy Bunny/Rev_C/Traps\n  TD_Base_Trap_V-Shape_C56.stl\n</code></pre> <p>There is a setscrew variant. I think the difference is that the setscrew metallic threads impart greater friction against the filament when it is activated as brake. These reportedly work better for some folks compared to the \"v\" shape traps.</p> <p>My understanding is that these traps are simply holes that the filament will pass through. When a filament block is active (enaged by the selector) the path of the filament as it passes through a trap is straight and clear with minimal resistance. If a block is not active then the trap is lifted slightly and the filament is no longer straight through the trap hole and experiences resistance; this helps keep the filament from moving in/out of the block while the block is not active.</p> <p>If you have m3x2 or m3x3 setscrews then you might want to try that set screw variant instead:</p> <pre><code>Triple-Decky/STL/Sturdy Bunny/Rev_C/Traps\n  TD_Base_Trap_M3x3_C55.stl\n</code></pre> <p>The last part you'll need from Triple-Decky is the servo arm. My FYSETC uses an MG90S servo, so I printed out this part</p> <pre><code>Triple-Decky/STL/Sturdy Bunny/Rev_C/ Servo_arms_for_3PS\n  Servo_Arm_MG90S_for_3PS.stl\n</code></pre>"},{"location":"sidebar/printing.html#thumper-blocks-skip-this-if-using-triple-decky","title":"Thumper Blocks (skip this if using Triple-Decky)","text":"<p>I'm using the latest parts (<code>Rev_2</code>) that were released on 11/10/2023. For each of the following parts print out one for each gate. In my case my ERCF will have 6 gates (ports)</p> <pre><code>/Thumper-Blocks/STL/Rev_2\n  [a]_latch.stl\n  [a]_tophat_with_supports.stl\n  base.stl\n  filament_path.stl\n</code></pre> <p>Note: Thumper Blocks provides a copy of the Springy servo arm you will use, but I opted to use the servo arm file direct from the Springy project just in case it was updated. I describe the Springy parts in the next section</p> <p>I've also made a video about these filament blocks </p>"},{"location":"sidebar/printing.html#springy-parts","title":"Springy Parts","text":"<pre><code>ERCF-Springy\n  [a]_Springy_Selector_Cart.stl\n  Spring_Cap.stl\n  Springy_Idler_Block.stl\n  Springy_Selector_Door.stl\n</code></pre> <p>My FYSETC kit provides an MG90S servo, so I need to print out this part:</p> <pre><code>ERCF-Springy/MG90S_Servo_Option\n  Springy_MG90S_Servo_Mount.stl\n</code></pre> <p>If you're using Triple-Decky then skip the following (as you'll be printing the servo arm from Triple-Decky). I'm not using Triple-Decky, I'm using Thumper Blocks. So I'll be using this part for the servo arm:</p> <pre><code>ERCF-Springy/MG90S_Servo_Option\n  [a]_Servo_Arm_MG90S.stl\n</code></pre>"},{"location":"sidebar/the-mods.html","title":"The various mods","text":"<p>For full details on the mods I've mentioned the best thing to do is to visit their Github project pages. Here are links to each of them:</p> <ul> <li>SturdyBunny</li> <li>Springy</li> <li>Triple-Decky</li> <li>Thumper Blocks</li> <li>Binky</li> <li>ERCF Filament Cutter</li> </ul> <p>For some of these mods I've taken some time to provide additional information and thought it would be useful to share here</p>"},{"location":"sidebar/the-mods.html#triple-decky","title":"Triple-Decky","text":"<p>This is a popular mod for the SturdyBunny. A lot of people have had great success with this mod that replaces the filament blocks found in SturdyBunny/ERCF. It has gone through several revisions and continues to improve with each one. Also the designer of Triple-Decky frequents the Voron <code>#ercf_questions</code> channel.</p> <p>Note: One thing to note about this mod, the filament blocks are 23.05mm wide compared to the original 21mm blocks in SturdyBunny. So this means if you are using a kit where the linear rods and the D-Shaft have already been cut to work with the 21mm blocks, that they may end up being shorter than you might feel comfortable with. If your kit was a 9 port/gate/channel version, you'll likely leave out a block leaving on 8.</p>"},{"location":"sidebar/the-mods.html#assembly-video-of-triple-decky-filament-blocks","title":"Assembly video of Triple-Decky filament blocks","text":"<p>Yes...I put together a video that describes how I clean up the printed parts and assemble them.</p> <p></p>"},{"location":"sidebar/the-mods.html#thumper-blocks","title":"Thumper Blocks","text":"<p>I just learned about a new filament blocks option today (11/10/2023) and asked about it in the following Voron discord server post. The designer of Thumper Blocks responded quickly and even pushed up a new revision (Rev_2) for me to try out.</p> <p>I've done some initial test prints and am really liking this design and think it might be an excellent option. I've already printed a bunch of Triple-Decky filament blocks but I think this Thumper Blocks design should be looked at as it has some really good design points:</p> <ul> <li>Base and Filament Path parts do not need supports</li> <li>My initial test prints of the Rev_1 pieces turned out great</li> <li>The \"brake\" uses a more readily available M4 nut </li> <li>The blocks are thinner so the original ERCF hardware (rods, etc) can be used</li> </ul> <p>Note: A major plus about this design is that if you're using pre-cut linear rods and D-shaft (say from a kit), you can keep the number of gates that the kit was designed for without having to possibly lose one if you had gone with the wider Triple-Decky blocks.</p> <p>More details about these Thumper Blocks differences can be found in the README.md</p> <p>I've also made a video about these filament blocks </p> <p>I'll update this section of the site after I get a chance to more fully evaluate this option. But so far I'm optimistic. It prints so much easier as it has no supports (except the tophat which is easy to remove) and the fitment of the parts that I'm getting from my printer seems to be just right. I like that I can use my existing hardware without having to lose a gate/port (as Triple-Decky is wider so you may lose a port....I do not know this for sure but I think that's the case).</p>"},{"location":"sidebar/the-mods.html#springy-selector-mod-video","title":"Springy Selector Mod Video","text":"<p>I took some video of my experience preparing and test fitting the Springy parts and found some time to edit/cut a video that I pushed up to YouTube</p> <p></p>"}]}